Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"1.8\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision fc287cd9585c142a0458390b558bca6c72bbcf6a)
+++ .idea/gradle.xml	(date 1605684061333)
@@ -15,6 +15,7 @@
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
+        <option name="useQualifiedModuleNames" value="true" />
       </GradleProjectSettings>
     </option>
   </component>
Index: app/src/main/java/com/example/smrpv2/ui/alarm/AlarmSetActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.smrpv2.ui.alarm;\r\n\r\nimport android.app.AlarmManager;\r\nimport android.app.AlertDialog;\r\nimport android.app.PendingIntent;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.util.SparseBooleanArray;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.ListView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\n//import com.example.smrp.LoginActivity;\r\nimport com.example.smrpv2.R;\r\n//import com.example.smrp.RetrofitHelper;\r\n//import com.example.smrp.RetrofitService;\r\n//import com.example.smrp.medicine.ListViewItem;\r\n//import com.example.smrp.reponse_medicine3;\r\nimport com.example.smrpv2.model.DoseTime;\r\nimport com.example.smrpv2.model.MedicineAlarmAskDto;\r\nimport com.example.smrpv2.model.MedicineItem;\r\nimport com.example.smrpv2.model.Message;\r\nimport com.example.smrpv2.model.SumMedInfo;\r\nimport com.example.smrpv2.retrofit.RetrofitHelper;\r\nimport com.example.smrpv2.ui.medicine.ListViewAdapter;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.GregorianCalendar;\r\nimport java.util.Locale;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\n/**\r\n * AlarmSetActivity : AlarmFragment에서 +버튼 눌렀을 때 알람을 설정하는 액티비티\r\n */\r\n\r\n/**\r\n * AlarmEditActivity와 AlarmSetActivity의 XML을 바꿈으로써 서버에서 바꾸어야하는 부분\r\n * - oneTimeDose()가 원래 EditText로, 숫자와 관련. 근데 xml이 아침, 점심, 저녁의 3가지 버튼으로 바뀜. => 이거에 대한 서버 값 불러와야 할 듯\r\n * - 근데 알람fragment의 알람 리스트에는 oneTimeDose가 숫자로 표기됨. 그래서 임시로 oneTimeDoseCount변수를 만들어 클릭된 거 개수 서버로 보내줌ㅈ => 이것도 바꿀 필요 있어 보임.\r\n */\r\n\r\npublic class AlarmSetActivity extends AppCompatActivity {\r\n\r\n    public static final String NOTIFICATION_CHANNEL_ID = \"10001\";\r\n\r\n\r\n    Context context;\r\n    AlarmManager alarmManager;\r\n    private InputMethodManager imm;\r\n\r\n    ListView Lst_medicine;\r\n    ListViewAdapter alarmListViewAdapter; //알람에 약을 추가한 어댑터\r\n    Button Btn_add, btn_Set_Alarm, btn_before, btn_after;\r\n    Button Btn_morning, Btn_afternoon, Btn_evening, Btn_addDate, Btn_init;\r\n    EditText et_alramName, et_dosingPeriod, et_oneTimeDose;\r\n    ImageView iv_back;\r\n\r\n    String back = \"a\";\r\n    String user_id;\r\n    int count = 0;\r\n    private static int dosingType = 1;\r\n    final int BEFORE_MEAL = 1;\r\n    final int AFTER_MEAL = 0;\r\n    final int AFTERNOON_CHECK = 0;\r\n    final int MORNING_CHECK = 0;\r\n    final int EVENING_CHECK = 0;\r\n    Intent aIntent;\r\n    int oneTimeDoseCount = 0;\r\n    int init_dosingPeriod = -10;\r\n    final int NOT_VALUE = -10;\r\n    ArrayList<MedicineItem> alarmMedicineList = new ArrayList<>(); // 약추가한 리스트\r\n    ArrayList<MedicineItem> list = new ArrayList<>();\r\n    ArrayList<String> array_oneTimeDose = new ArrayList<String>(Arrays.asList(\"아침\", \"점심\", \"저녁\"));\r\n    ArrayList<String> selectedOneTimeDose = new ArrayList<String>();\r\n    private SparseBooleanArray mSelectedItems = new SparseBooleanArray(0);\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == 1) {\r\n            if (resultCode == RESULT_OK) {\r\n                alarmMedicineList.clear(); // 전에 있던 약 리스트 정보를 삭제\r\n                //반환값과 함께 전달받은 리스트뷰로 갱신하기\r\n                alarmMedicineList.addAll((ArrayList<MedicineItem>) data.getSerializableExtra(\"listViewItemArrayList\"));\r\n                alarmListViewAdapter.notifyDataSetChanged();\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n    }\r\n\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_alarm_set);\r\n\r\n        this.context = this;\r\n\r\n        //알람초기화\r\n        alarmManager = (AlarmManager) getSystemService(ALARM_SERVICE);\r\n\r\n         aIntent = new Intent(this, AlarmReceiver.class);\r\n        final Calendar calendar = Calendar.getInstance();\r\n\r\n        Intent intent = getIntent();\r\n        SharedPreferences loginInfromation = getSharedPreferences(\"setting\", 0);\r\n        user_id = loginInfromation.getString(\"id\", \"\");\r\n        list = (ArrayList<MedicineItem>) intent.getSerializableExtra(\"list\");\r\n        back = intent.getStringExtra(\"back\");\r\n\r\n        iv_back = findViewById(R.id.iv_back);\r\n        Btn_add = findViewById(R.id.Btn_add);\r\n        btn_before = findViewById(R.id.btn_before);\r\n        btn_after = findViewById(R.id.btn_after);\r\n        btn_Set_Alarm = findViewById(R.id.btn_set_alarm);\r\n        et_alramName = findViewById(R.id.et_alramName);\r\n        et_dosingPeriod = findViewById(R.id.et_dosingPeriod);\r\n        // et_oneTimeDose = findViewById(R.id.et_oneTimeDose);\r\n        Btn_addDate = findViewById(R.id.btn_addDate);\r\n        Btn_init = findViewById(R.id.btn_init);\r\n        Btn_morning = findViewById(R.id.btn_morning);\r\n        Btn_afternoon = findViewById(R.id.btn_afternoon);\r\n        Btn_evening = findViewById(R.id.btn_evening);\r\n\r\n        Lst_medicine = findViewById(R.id.Lst_medicine2);\r\n        imm = (InputMethodManager) getSystemService(INPUT_METHOD_SERVICE);\r\n\r\n        alarmListViewAdapter = new ListViewAdapter(alarmMedicineList, this, 0); //alarmMedicineList =ArrayList\r\n        Lst_medicine.setAdapter(alarmListViewAdapter);  //Lst_medicine: listView\r\n\r\n        if (back != null) {\r\n            alarmMedicineList = (ArrayList<MedicineItem>) intent.getSerializableExtra(\"listViewItemArrayList\");\r\n            alarmListViewAdapter.notifyDataSetChanged();\r\n        } else {\r\n            if (list != null && list.size() > 0) {\r\n                alarmMedicineList.addAll(list);\r\n                alarmListViewAdapter.notifyDataSetChanged();\r\n            }\r\n\r\n        }\r\n\r\n\r\n        btn_before.setOnClickListener(new View.OnClickListener() {//식전버튼을 눌렀을 때\r\n            @Override\r\n            public void onClick(View view) {\r\n                dosingType = BEFORE_MEAL;\r\n                btn_before.setBackgroundResource(R.drawable.setbtnclick);\r\n                btn_before.setTextColor(Color.WHITE);\r\n                btn_after.setBackgroundResource(R.drawable.setbtn);\r\n                btn_after.setTextColor(Color.BLACK);\r\n\r\n            }\r\n        });\r\n        btn_after.setOnClickListener(new View.OnClickListener() { //식후버튼을 눌렀을 때\r\n            @Override\r\n            public void onClick(View view) {\r\n                dosingType = AFTER_MEAL;\r\n                btn_before.setBackgroundResource(R.drawable.setbtn);\r\n                btn_before.setTextColor(Color.BLACK);\r\n                btn_after.setBackgroundResource(R.drawable.setbtnclick);\r\n                btn_after.setTextColor(Color.WHITE);\r\n\r\n            }\r\n        });\r\n\r\n        Btn_evening.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                checkSelectedOneTimeDose(2, selectedOneTimeDose, Btn_evening);\r\n\r\n            }\r\n        });\r\n        Btn_afternoon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                checkSelectedOneTimeDose(1, selectedOneTimeDose, Btn_afternoon);\r\n            }\r\n        });\r\n\r\n        Btn_morning.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                checkSelectedOneTimeDose(0, selectedOneTimeDose, Btn_morning);\r\n            }\r\n        });\r\n        Btn_init.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if (init_dosingPeriod == NOT_VALUE)\r\n                    et_dosingPeriod.setText(String.valueOf(0));\r\n                else\r\n                    et_dosingPeriod.setText(String.valueOf(init_dosingPeriod));\r\n            }\r\n        });\r\n        Btn_addDate.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                int dosingPeriod;\r\n\r\n                if (init_dosingPeriod == NOT_VALUE) {\r\n                    dosingPeriod = 0;\r\n                    init_dosingPeriod = dosingPeriod;\r\n                } else dosingPeriod = Integer.parseInt(et_dosingPeriod.getText().toString()) + 1;\r\n                et_dosingPeriod.setText(String.valueOf(dosingPeriod));\r\n\r\n\r\n            }\r\n        });\r\n\r\n\r\n        iv_back.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onBackPressed();\r\n            }\r\n        });\r\n        Btn_add.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                showAlertDialog();\r\n            }\r\n        });\r\n\r\n        btn_Set_Alarm.setOnClickListener(new View.OnClickListener() {//알람설정을 누른경우\r\n            @Override\r\n            public void onClick(View v) { // 알람설정\r\n                ArrayList<Long> registerId = new ArrayList<>();\r\n\r\n                for (MedicineItem item : alarmMedicineList) {\r\n                    registerId.add(item.getId());\r\n                }\r\n                String alarmName = et_alramName.getText().toString();\r\n                int dosingPeriod = Integer.parseInt(et_dosingPeriod.getText().toString());\r\n                //int oneTimeCapacity =oneTimeDoseCount;//Integer.parseInt(et_oneTimeDose.getText().toString());\r\n                //DosTime 아침 점심 저녁 어떤것인지 판단 하는 로직  DoseTime 에는 Y OR N 가 들어간다.\r\n                DoseTime doseTime = new DoseTime(\"N\", \"N\", \"N\");\r\n\r\n                for (String dose : selectedOneTimeDose) {\r\n                    switch (dose) {\r\n                        case \"아침\": {\r\n                            doseTime.setMorning(\"Y\");\r\n                            break;\r\n                        }\r\n                        case \"점심\": {\r\n                            doseTime.setLunch(\"Y\");\r\n                            break;\r\n                        }\r\n                        case \"저녁\": {\r\n                            doseTime.setDinner(\"Y\");\r\n                            break;\r\n                        }\r\n                        default: {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                Log.d(\"dose\", \"아침\" + doseTime.getMorning());\r\n                Log.d(\"dose\", \"점심\" + doseTime.getLunch());\r\n                Log.d(\"dose\", \"저녁\" + doseTime.getDinner());\r\n\r\n                String doseType;\r\n                if (dosingType == 1) {\r\n                    doseType = \"식전\";\r\n                } else {\r\n                    doseType = \"식후\";\r\n\r\n                }\r\n                final MedicineAlarmAskDto medicineAlarmAskDto = new MedicineAlarmAskDto(0, \"q\", registerId, alarmName, dosingPeriod, null, null, doseTime, doseType);\r\n                Call<Message> call = RetrofitHelper.getRetrofitService_server().addMedicineAlarm(medicineAlarmAskDto);\r\n                call.enqueue(new Callback<Message>() {\r\n                    @Override\r\n                    public void onResponse(Call<Message> call, Response<Message> response) {\r\n                        if (response.body().getResultCode().equals(\"OK\")) {\r\n                            Log.d(\"등록완료\", \"등록\");\r\n\r\n\r\n                            long id =40;\r\n\r\n\r\n                            //알람등록\r\n                            setAlarm(medicineAlarmAskDto,id);\r\n                            onBackPressed();\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onFailure(Call<Message> call, Throwable t) {\r\n\r\n                    }\r\n                });\r\n\r\n\r\n                /**\r\n                 * 서버\r\n                 */\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void setAlarm( MedicineAlarmAskDto medicineAlarmAskDto,long id) {\r\n        Date currentTime = Calendar.getInstance().getTime();\r\n        GregorianCalendar cal = new GregorianCalendar(Locale.KOREA);\r\n        cal.setTime(currentTime);\r\n\r\n        PendingIntent pendingIntent1 = PendingIntent.getBroadcast(context, (int)id+10000, aIntent, PendingIntent.FLAG_UPDATE_CURRENT);\r\n        PendingIntent pendingIntent2 = PendingIntent.getBroadcast(context, (int)id+20000, aIntent, PendingIntent.FLAG_UPDATE_CURRENT);\r\n        PendingIntent pendingIntent3 = PendingIntent.getBroadcast(context, (int)id+30000, aIntent, PendingIntent.FLAG_UPDATE_CURRENT);\r\n\r\n        //식전:  아침08:00점심11:40저녁17:00으로 등록하고 약을 복용하는 날만큼 반복 시켜 알람등록\r\n        //식후: 아침09:00점심12:30저녁18:00으로 등록하고 약을 복용하는 날만큼 반복 시켜 알람등록\r\n        String doseType = medicineAlarmAskDto.getDoseType();\r\n        int dosingPeriod = medicineAlarmAskDto.getDosingPeriod();\r\n        DoseTime doseTime = medicineAlarmAskDto.getDoseTime();\r\n\r\n\r\n        if (doseType.equals(\"식전\")) {//식전\r\n            for (int i = 0; i < dosingPeriod; i++) {\r\n                cal.set(Calendar.DATE, i);\r\n                if (doseTime.getMorning().equals(\"Y\")) {\r\n                    cal.set(Calendar.HOUR_OF_DAY, 8);\r\n                    cal.set(Calendar.MINUTE, 0);\r\n                    alarmManager.setExact(\r\n                            AlarmManager.RTC_WAKEUP,\r\n                            cal.getTimeInMillis(),\r\n                            pendingIntent1\r\n                    );\r\n                }\r\n                if (doseTime.getLunch().equals(\"Y\")) {\r\n                    cal.set(Calendar.HOUR_OF_DAY, 11);\r\n                    cal.set(Calendar.MINUTE, 40);\r\n                    alarmManager.setExact(\r\n                            AlarmManager.RTC_WAKEUP,\r\n                            cal.getTimeInMillis(),\r\n                            pendingIntent2\r\n                    );\r\n                }\r\n                if (doseTime.getDinner().equals(\"Y\")) {\r\n                    cal.set(Calendar.HOUR_OF_DAY, 17);\r\n                    cal.set(Calendar.MINUTE, 0);\r\n                    alarmManager.setExact(\r\n                            AlarmManager.RTC_WAKEUP,\r\n                            cal.getTimeInMillis(),\r\n                            pendingIntent3\r\n                    );\r\n                }\r\n            }\r\n        } else {//식후\r\n            for (int i = 0; i < dosingPeriod; i++) {\r\n                cal.set(Calendar.DATE, i);\r\n                if (doseTime.getMorning().equals(\"Y\")) {\r\n                    cal.set(Calendar.HOUR_OF_DAY, 9);\r\n                    cal.set(Calendar.MINUTE, 0);\r\n                    alarmManager.setExact(\r\n                            AlarmManager.RTC_WAKEUP,\r\n                            cal.getTimeInMillis(),\r\n                            pendingIntent1\r\n                    );\r\n                }\r\n                if (doseTime.getLunch().equals(\"Y\")) {\r\n                    cal.set(Calendar.HOUR_OF_DAY, 12);\r\n                    cal.set(Calendar.MINUTE, 30);\r\n                    alarmManager.setExact(\r\n                            AlarmManager.RTC_WAKEUP,\r\n                            cal.getTimeInMillis(),\r\n                            pendingIntent2\r\n                    );\r\n                }\r\n                if (doseTime.getDinner().equals(\"Y\")) {\r\n                    cal.set(Calendar.HOUR_OF_DAY, 18);\r\n                    cal.set(Calendar.MINUTE, 0);\r\n                    alarmManager.setExact(\r\n                            AlarmManager.RTC_WAKEUP,\r\n                            cal.getTimeInMillis(),\r\n                            pendingIntent3\r\n                    );\r\n                }\r\n            }\r\n\r\n            // cal.add(Calendar.DATE, 1)\r\n\r\n        }\r\n        Log.d(\"알람\", \"알람등록\");\r\n    }\r\n\r\n    private void showAlertDialog() {\r\n\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        LayoutInflater inflater = getLayoutInflater();\r\n        View view = inflater.inflate(R.layout.alarm_med_dialog, null);\r\n        builder.setView(view);\r\n        final ArrayList<MedicineItem> items = new ArrayList<>();\r\n        final AlertDialog dialog = builder.create();\r\n\r\n        ListView Lst_medicine = view.findViewById(R.id.Lst_medicine); //약 추가하기 팝업 창 내가 등록한 약\r\n        final Button Btn_ok = view.findViewById(R.id.Btn_ok);\r\n        final ListViewAdapter adapter = new ListViewAdapter(items, this, -1);\r\n\r\n        Lst_medicine.setAdapter(adapter);\r\n        Btn_ok.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) { // 확인 버튼 누르기(약추가하기 기능에서)\r\n\r\n\r\n                int num = 0;\r\n                Toast.makeText(getApplicationContext(), \"추가 되었습니다.\", Toast.LENGTH_SHORT).show();\r\n\r\n                ArrayList<MedicineItem> list = adapter.res();\r\n                if (alarmMedicineList.size() == 1) {//등록된 약 기능에서 알람추가시 중복제거\r\n\r\n                    for (int i = 0; i < list.size(); i++) {\r\n                        if (alarmMedicineList.get(0).getItemSeq().equals(list.get(i).getItemSeq())) {\r\n                            list.remove(i);\r\n                            num++;\r\n                        }\r\n                    }\r\n                } else {\r\n                    for (int i = 0; i < alarmMedicineList.size(); i++) {\r\n                        for (int j = 0; j < list.size(); j++) {\r\n                            if (alarmMedicineList.get(i).getItemSeq().equals(list.get(j).getItemSeq())) {\r\n                                list.remove(j);\r\n                                num++;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (num > 0)\r\n                    Toast.makeText(getApplicationContext(), \"중복된 약 \" + num + \"건을 제외하였습니다.\", Toast.LENGTH_SHORT).show();\r\n                alarmMedicineList.addAll(list);\r\n\r\n\r\n                alarmListViewAdapter.notifyDataSetChanged();\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n        Call<ArrayList<SumMedInfo>> call = RetrofitHelper.getRetrofitService_server().medicineRegs(\"q\");\r\n        call.enqueue(new Callback<ArrayList<SumMedInfo>>() {\r\n            @Override\r\n            public void onResponse(Call<ArrayList<SumMedInfo>> call, Response<ArrayList<SumMedInfo>> response) {\r\n                ArrayList<SumMedInfo> med_items = response.body();\r\n\r\n                items.clear();\r\n                for (int i = 0; i < med_items.size(); i++) {\r\n                    items.add(new MedicineItem(med_items.get(i).getId(), med_items.get(i).getImageUrl(), med_items.get(i).getItemName(), med_items.get(i).getItemSeq(), med_items.get(i).getCreatedAt(), med_items.get(i).getEntpName()));\r\n\r\n\r\n                }\r\n                adapter.notifyDataSetChanged();\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<ArrayList<SumMedInfo>> call, Throwable t) {\r\n                t.printStackTrace();\r\n            }\r\n        });\r\n        dialog.show();\r\n    }\r\n\r\n    void checkSelectedOneTimeDose(int position, ArrayList<String> item, Button bt) {\r\n        if (mSelectedItems.get(position, false)) {\r\n            mSelectedItems.put(position, false);\r\n            bt.setBackgroundResource(R.drawable.setbtn);\r\n            bt.setTextColor(Color.BLACK);\r\n\r\n        } else {\r\n            mSelectedItems.put(position, true);\r\n            bt.setBackgroundResource(R.drawable.setbtnclick);\r\n            bt.setTextColor(Color.WHITE);\r\n        }\r\n\r\n        for (int i = 0; i < 3; i++) {\r\n            if (i == 0) {\r\n                item.clear();\r\n                oneTimeDoseCount = 0;\r\n            }\r\n            if (mSelectedItems.get(i, false)) {\r\n                item.add(array_oneTimeDose.get(i));\r\n                Log.e(\"fff\", array_oneTimeDose.get(i));\r\n                oneTimeDoseCount++;\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/smrpv2/ui/alarm/AlarmSetActivity.java	(revision fc287cd9585c142a0458390b558bca6c72bbcf6a)
+++ app/src/main/java/com/example/smrpv2/ui/alarm/AlarmSetActivity.java	(date 1605699377832)
@@ -33,6 +33,7 @@
 import com.example.smrpv2.model.MedicineItem;
 import com.example.smrpv2.model.Message;
 import com.example.smrpv2.model.SumMedInfo;
+import com.example.smrpv2.model.user_model.UserInform;
 import com.example.smrpv2.retrofit.RetrofitHelper;
 import com.example.smrpv2.ui.medicine.ListViewAdapter;
 
@@ -285,7 +286,7 @@
                     doseType = "식후";
 
                 }
-                final MedicineAlarmAskDto medicineAlarmAskDto = new MedicineAlarmAskDto(0, "q", registerId, alarmName, dosingPeriod, null, null, doseTime, doseType);
+                final MedicineAlarmAskDto medicineAlarmAskDto = new MedicineAlarmAskDto(0, UserInform.getUserId(), registerId, alarmName, dosingPeriod, null, null, doseTime, doseType);
                 Call<Message> call = RetrofitHelper.getRetrofitService_server().addMedicineAlarm(medicineAlarmAskDto);
                 call.enqueue(new Callback<Message>() {
                     @Override
@@ -459,7 +460,7 @@
             }
         });
 
-        Call<ArrayList<SumMedInfo>> call = RetrofitHelper.getRetrofitService_server().medicineRegs("q");
+        Call<ArrayList<SumMedInfo>> call = RetrofitHelper.getRetrofitService_server().medicineRegs(UserInform.getUserId());
         call.enqueue(new Callback<ArrayList<SumMedInfo>>() {
             @Override
             public void onResponse(Call<ArrayList<SumMedInfo>> call, Response<ArrayList<SumMedInfo>> response) {
Index: app/src/main/java/com/example/smrpv2/ui/alarm/AlarmFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.smrpv2.ui.alarm;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.viewpager.widget.ViewPager;\r\n\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\n\r\nimport com.example.smrpv2.R;\r\nimport com.example.smrpv2.model.MedicineAlarmResponDto;\r\nimport com.example.smrpv2.model.alarm_model.AlarmItem;\r\nimport com.example.smrpv2.retrofit.RetrofitHelper;\r\nimport com.example.smrpv2.ui.start.AutoSlide;\r\nimport com.example.smrpv2.ui.start.ViewPagerAdapter;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport me.relex.circleindicator.CircleIndicator;\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\n/**\r\n * 알람 리스트 출력\r\n * 기능 1. 알람 추가(+버튼)\r\n * 기능 2. 알람 편집(알람 리스트 중 하나 클릭)\r\n */\r\npublic class AlarmFragment extends Fragment {\r\n\r\n    private ViewPager viewPager;\r\n    private ViewPagerAdapter adapter;\r\n    private AlarmListViewAdapter listViewAdapter;\r\n\r\n    private ListView Lst_medicine;\r\n    private TextView Txt_empty;\r\n    private ImageView Img_ic_plus;\r\n\r\n    AutoSlide autoSlide;\r\n    private final long DELAY_MS = 1000;\r\n    private final long PERIOD_MS = 3000;\r\n    private String user_id;\r\n    ArrayList<AlarmItem> items = new ArrayList<AlarmItem>();\r\n    private int[] ad_banner= {R.drawable.ad_banner1, R.drawable.ad_banner2,R.drawable.ad_banner3};\r\n\r\n    public View onCreateView(@NonNull LayoutInflater inflater,\r\n                             ViewGroup container, Bundle savedInstanceState) {\r\n\r\n        if(container.getChildCount() > 0)\r\n            container.removeViewAt(0);\r\n        final android.view.View v = inflater.inflate(R.layout.alarm_fragment, container, false);\r\n\r\n\r\n        //초기화.....\r\n        Lst_medicine = v.findViewById(R.id.Lst_medicine);\r\n        Txt_empty = v.findViewById(R.id.Txt_empty);\r\n        Lst_medicine.setEmptyView(Txt_empty);\r\n        Img_ic_plus = v.findViewById(R.id.Img_ic_plus);\r\n        viewPager =  v.findViewById(R.id.banner);\r\n        adapter = new ViewPagerAdapter(getActivity(),ad_banner);\r\n        CircleIndicator indicator = v.findViewById(R.id.indicator); // 인디케이터\r\n        listViewAdapter= new AlarmListViewAdapter(items,getActivity());\r\n\r\n\r\n        //view 설정...\r\n        viewPager.setAdapter(adapter);\r\n        indicator.setViewPager(viewPager);\r\n        Lst_medicine.setAdapter(listViewAdapter);\r\n\r\n\r\n        SharedPreferences loginInfromation = getActivity().getSharedPreferences(\"setting\",0);\r\n        user_id = loginInfromation.getString(\"id\",\"\");\r\n\r\n\r\n        autoSlide = new AutoSlide(viewPager, DELAY_MS, PERIOD_MS);\r\n        autoSlide.startSlide();\r\n\r\n        Img_ic_plus.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(getContext().getApplicationContext(), AlarmSetActivity.class);\r\n                startActivity(intent);\r\n\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n        return v;\r\n\r\n    }\r\n    public void onStart() {\r\n        super.onStart();\r\n        Call<ArrayList<MedicineAlarmResponDto>> call = RetrofitHelper.getRetrofitService_server().getMedicineAlarmAll(\"q\");\r\n        call.enqueue(new Callback<ArrayList<MedicineAlarmResponDto>>() {\r\n            @Override\r\n            public void onResponse(Call<ArrayList<MedicineAlarmResponDto>> call, Response<ArrayList<MedicineAlarmResponDto>> response) {\r\n                ArrayList<MedicineAlarmResponDto> body = response.body();\r\n                items.clear();\r\n                for (MedicineAlarmResponDto medicineAlarmResponDto : body) {\r\n                    items.add(new AlarmItem(medicineAlarmResponDto.getAlarmName(), medicineAlarmResponDto.getStartAlarm(), medicineAlarmResponDto.getFinishAlarm(),\r\n                            medicineAlarmResponDto.getDoseTime(), medicineAlarmResponDto.getId(), medicineAlarmResponDto.getDoseType(),\r\n                            String.valueOf(medicineAlarmResponDto.getDosingPeriod())));\r\n                    Log.d(\"넣을때\", medicineAlarmResponDto.getId() + \"\");\r\n                }\r\n                listViewAdapter.notifyDataSetChanged();\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<ArrayList<MedicineAlarmResponDto>> call, Throwable t) {\r\n                Log.d(\"AlarmAll\", t.toString());\r\n            }\r\n        });\r\n        /**\r\n         *\r\n         *  서버 내용. 연결이 안돼서 임시로 비움. 나중에 연결 후 추가예정\r\n         *\r\n         *\r\n         */\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/smrpv2/ui/alarm/AlarmFragment.java	(revision fc287cd9585c142a0458390b558bca6c72bbcf6a)
+++ app/src/main/java/com/example/smrpv2/ui/alarm/AlarmFragment.java	(date 1605699080788)
@@ -18,6 +18,7 @@
 import com.example.smrpv2.R;
 import com.example.smrpv2.model.MedicineAlarmResponDto;
 import com.example.smrpv2.model.alarm_model.AlarmItem;
+import com.example.smrpv2.model.user_model.UserInform;
 import com.example.smrpv2.retrofit.RetrofitHelper;
 import com.example.smrpv2.ui.start.AutoSlide;
 import com.example.smrpv2.ui.start.ViewPagerAdapter;
@@ -102,7 +103,7 @@
     }
     public void onStart() {
         super.onStart();
-        Call<ArrayList<MedicineAlarmResponDto>> call = RetrofitHelper.getRetrofitService_server().getMedicineAlarmAll("q");
+        Call<ArrayList<MedicineAlarmResponDto>> call = RetrofitHelper.getRetrofitService_server().getMedicineAlarmAll(UserInform.getUserId());
         call.enqueue(new Callback<ArrayList<MedicineAlarmResponDto>>() {
             @Override
             public void onResponse(Call<ArrayList<MedicineAlarmResponDto>> call, Response<ArrayList<MedicineAlarmResponDto>> response) {
Index: app/src/main/java/com/example/smrpv2/ui/medicine/MedicineFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.smrpv2.ui.medicine;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.viewpager.widget.ViewPager;\r\n\r\n\r\nimport com.example.smrpv2.R;\r\n\r\nimport com.example.smrpv2.model.MedicineItem;\r\nimport com.example.smrpv2.model.Message;\r\nimport com.example.smrpv2.model.SumMedInfo;\r\nimport com.example.smrpv2.retrofit.RetrofitHelper;\r\nimport com.example.smrpv2.ui.main.MainActivity;\r\nimport com.example.smrpv2.ui.start.AutoSlide;\r\nimport com.example.smrpv2.ui.start.ViewPagerAdapter;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport me.relex.circleindicator.CircleIndicator;\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\n/**\r\n *\r\n * MedicineFragment : 약 등록하기 화면\r\n *  +버튼을 눌러 뜨는 팝업창에서 약 사진 찍기 or 약봉투 및 처방전 사진 찍기 or 약 검색하기 중 하나를 선택해 각 기능을 수행한 후 약을 등록할 수 있다.\r\n *  등록된 약의 리스트를 보여준다.\r\n *  등록된 약의 리스트 중 하나를 클릭 시 상세 정보를 볼 수 있고, 그 창에서 알람을 설정할 수 있다.(MedicineDetailAcitivity 및 AlarmSetActivity)\r\n *\r\n */\r\npublic class MedicineFragment extends Fragment {\r\n    private ViewPager viewPager;\r\n    private ViewPagerAdapter adapter;\r\n\r\n    private ListView Lst_medicine; // 등록한 약 목록(아직 구현x)\r\n    private ListViewAdapter listViewAdapter;\r\n\r\n    private TextView Txt_empty; // 등록한 약이 없을 시 text메세지로 알려줌\r\n    private ImageView Img_ic_plus; // +아이콘\r\n\r\n    private AutoSlide autoSlide;\r\n    private final int MEDICINE_FRAGMENT = 1;\r\n    private final long DELAY_MS = 1000; // 자동 슬라이드를 위한 변수\r\n    private final long PERIOD_MS = 3000; // 자동 슬라이드를 위한 변수\r\n    ArrayList<MedicineItem> items = new ArrayList<MedicineItem>();\r\n    private int[] images= {R.drawable.ad_banner1, R.drawable.ad_banner2,R.drawable.ad_banner3}; // ViewPagerAdapter에  보낼 이미지. 이걸로 이미지 슬라이드 띄어줌\r\n\r\n    public View onCreateView(@NonNull LayoutInflater inflater,\r\n                             ViewGroup container, Bundle savedInstanceState) {\r\n\r\n\r\n        View v = inflater.inflate(R.layout.fragment_medicine, container, false);\r\n\r\n        //초기화..\r\n        viewPager =  v.findViewById(R.id.banner);\r\n        adapter = new ViewPagerAdapter(getActivity(),images);\r\n        CircleIndicator indicator = v.findViewById(R.id.indicator); // 인디케이터\r\n        Lst_medicine = v.findViewById(R.id.Lst_medicine);\r\n        Txt_empty = v.findViewById(R.id.Txt_empty);\r\n        Img_ic_plus = v.findViewById(R.id.Img_ic_plus);\r\n        listViewAdapter=new ListViewAdapter(items,getActivity(),MEDICINE_FRAGMENT);\r\n\r\n        // view 설정..\r\n        Lst_medicine.setEmptyView(Txt_empty);\r\n        indicator.setViewPager(viewPager); // 인디케이터 뷰에 추가\r\n        viewPager.setAdapter(adapter);\r\n        Lst_medicine.setAdapter(listViewAdapter);\r\n\r\n        autoSlide = new AutoSlide(viewPager,DELAY_MS,PERIOD_MS);\r\n        autoSlide.startSlide();\r\n        Img_ic_plus.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                PopupFragment p = new PopupFragment();\r\n                p.show(getActivity().getSupportFragmentManager(),\"popup\"); //팝업 창 띄우기\r\n\r\n            }\r\n        });\r\n\r\n        /*SharedPreferences loginInfromation = getActivity().getSharedPreferences(\"setting\",0);\r\n        user_id = loginInfromation.getString(\"id\",\"\");*/\r\n        return v;\r\n    }\r\n    public void onStart() {\r\n        super.onStart();\r\n\r\n        Call<ArrayList<SumMedInfo>> call= RetrofitHelper.getRetrofitService_server().medicineRegs(\"q\");\r\n        call.enqueue(new Callback<ArrayList<SumMedInfo>>() {\r\n            @Override\r\n            public void onResponse(Call<ArrayList<SumMedInfo>> call, Response<ArrayList<SumMedInfo>> response) {\r\n                ArrayList<SumMedInfo> med_items = response.body();\r\n\r\n                items.clear();\r\n                for(int i = 0; i<  med_items.size(); i++) {\r\n                    items.add(new MedicineItem(med_items.get(i).getId(),med_items.get(i).getImageUrl(), med_items.get(i).getItemName(), med_items.get(i).getItemSeq(), med_items.get(i).getCreatedAt(), med_items.get(i).getEntpName()));\r\n\r\n                }\r\n                listViewAdapter.notifyDataSetChanged();\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<ArrayList<SumMedInfo>> call, Throwable t) {\r\n                t.printStackTrace();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/smrpv2/ui/medicine/MedicineFragment.java	(revision fc287cd9585c142a0458390b558bca6c72bbcf6a)
+++ app/src/main/java/com/example/smrpv2/ui/medicine/MedicineFragment.java	(date 1605699032903)
@@ -20,6 +20,7 @@
 import com.example.smrpv2.model.MedicineItem;
 import com.example.smrpv2.model.Message;
 import com.example.smrpv2.model.SumMedInfo;
+import com.example.smrpv2.model.user_model.UserInform;
 import com.example.smrpv2.retrofit.RetrofitHelper;
 import com.example.smrpv2.ui.main.MainActivity;
 import com.example.smrpv2.ui.start.AutoSlide;
@@ -96,7 +97,7 @@
     public void onStart() {
         super.onStart();
 
-        Call<ArrayList<SumMedInfo>> call= RetrofitHelper.getRetrofitService_server().medicineRegs("q");
+        Call<ArrayList<SumMedInfo>> call= RetrofitHelper.getRetrofitService_server().medicineRegs(UserInform.getUserId());
         call.enqueue(new Callback<ArrayList<SumMedInfo>>() {
             @Override
             public void onResponse(Call<ArrayList<SumMedInfo>> call, Response<ArrayList<SumMedInfo>> response) {
Index: app/src/main/java/com/example/smrpv2/ui/login/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.smrpv2.ui.login;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.graphics.Rect;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.CheckBox;\r\nimport android.widget.CompoundButton;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Button;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.smrpv2.R;\r\nimport com.example.smrpv2.model.user_model.LoginUser;\r\nimport com.example.smrpv2.model.UserDto;\r\nimport com.example.smrpv2.retrofit.RetrofitHelper;\r\nimport com.example.smrpv2.ui.common.SharedData;\r\nimport com.example.smrpv2.ui.findid.FindIdActivity;\r\n\r\nimport com.example.smrpv2.ui.main.MainActivity;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\n/*\r\n * 로그인 액티비티\r\n */\r\npublic class LoginActivity extends AppCompatActivity {\r\n    Context context; //this 객체\r\n    TextView findId; //아이디 비밀 번호 찾기 TextView\r\n    EditText Txt_id,Txt_password;\r\n    Button Btn_login;\r\n    CheckBox Chk_autoLogin,Chk_storeId;\r\n\r\n    boolean bool_store_login = false; //자동로그인 유무\r\n    boolean bool_store_id = false; //아이디 저장 유무\r\n    SharedPreferences loginInformation, storeIdInformation; //자동로그인 및 아이디 저장 시 필요\r\n    SharedPreferences.Editor autoLogin_editor, storeId_editor;//자동로그인 및 아이디 저장 시 필요\r\n    String user_id=\"\",user_pass=\"\";//자동로그인 및 아이디 저장 시 필요\r\n    boolean getAutoLogin= false, getStoreId =false;//자동로그인 및 아이디 저장 시 필요\r\n    String name=\"\";\r\n    SharedData sharedData = null;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_login);\r\n        //초기화 작업\r\n        context=this;\r\n        initView();\r\n        storeId(); //아이디 저장 기능이 설정되어있는지 확인\r\n       // autoLogin(); //자동로그인 기능이 설정되어있는지 확인\r\n\r\n\r\n        //자동 로그인 체크박스...\r\n        Chk_autoLogin.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\r\n                bool_store_login = isChecked;\r\n            }\r\n        });\r\n        //아이디 저장 체크박스...\r\n        Chk_storeId.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\r\n                bool_store_id = isChecked;\r\n\r\n            }\r\n        });\r\n        //아이디 비밀번호 찾기 클릭 시 ...\r\n        findId.setOnClickListener(new View.OnClickListener() { // 아이디 / 비밀번호 찾기\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(context, FindIdActivity.class);\r\n                startActivity(intent);\r\n\r\n            }\r\n        });\r\n        Btn_login.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                /**임시로 Intent로 선언 테스트용**/\r\n               /* Intent intent = new Intent(getApplication(), MainActivity.class);\r\n                startActivity(intent);*/\r\n\r\n                checkAutoAndStore(); // 이 코드는 임시.. (테스트용) 나중에 서버랑 합쳐야함..\r\n                if(user_id.equals(\"\") || user_pass.equals(\"\")){\r\n                    if(user_id.equals(\"\") && user_pass.equals(\"\"))\r\n                        show(\"아이디와 패스워드를 이용하세요.\");\r\n                    else if(user_id.equals(\"\"))\r\n                        show(\"아이디를 입력하세요.\");\r\n                    else\r\n                        show(\"비밀번호를 입력하세요.\");\r\n                }\r\n                else\r\n                    login(user_id,user_pass);\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    private void login(String id, String passwd){\r\n\r\n        LoginUser loginUser = new LoginUser(id,passwd);\r\n\r\n        Log.d(\"TAG\", \"login_id: \"+id);\r\n        Log.d(\"TAG\", \"login_passwd: \"+passwd);\r\n        //로그인 시도\r\n        Call<UserDto> call=RetrofitHelper.getRetrofitService_server().login(loginUser);\r\n        call.enqueue(new Callback<UserDto>() {\r\n            @Override\r\n            public void onResponse(Call<UserDto> call, Response<UserDto> response) {\r\n\r\n                //Log.d(\"login\",response.toString());\r\n                //Log.d(\"ddd\", response.body().getUserId());\r\n\r\n                if(response.body().getUserId() != null){ //로그인 성공\r\n\r\n                    checkAutoAndStore();\r\n                    //MainActivity로 화면 이동\r\n                    Intent intent = new Intent(getApplication(), MainActivity.class);\r\n                    intent.putExtra(\"name\",response.body().getName());\r\n                    startActivity(intent);\r\n                    finish();\r\n                }else{ //로그인 실패\r\n                    show(\"아이디 및 비밀번호를 확인하고 다시 입력하세요.\");\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<UserDto> call, Throwable t) {\r\n                show(\"서버 통신 오류\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n    private void initView() { //init\r\n        findId=findViewById(R.id.tv_findId);\r\n        Btn_login = findViewById(R.id.Btn_Innerlogin);\r\n        Txt_id=findViewById(R.id.Txt_id);\r\n        Txt_password = findViewById(R.id.Txt_password);\r\n        Chk_autoLogin = findViewById(R.id.auto_login);\r\n        Chk_storeId = findViewById(R.id.store_id);\r\n\r\n    }\r\n\r\n    /**\r\n     * 아이디 저장 코드\r\n     */\r\n    private void storeId(){//아이디 저장 기능이 설정되어있는지 확인하고 설정\r\n        allocteSharedData(); //sharedData 할당\r\n        bool_store_id = sharedData.isStroe_id(); //파일에 저장되어있는 아이디 저장 기능 설정 값을 읽어옴\r\n        if(bool_store_id){ //아이디 저장 기능이 설정이 되어있을경우\r\n            String user_id = sharedData.getUser_id();\r\n            Txt_id.setText(user_id);\r\n            Chk_storeId.setChecked(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 자동 로그인 코드\r\n     */\r\n    private void autoLogin(){//자동 로그인이 설정되어있는지 확인\r\n        allocteSharedData(); //sharedData 할당\r\n\r\n        getAutoLogin = sharedData.isAuto_login(); //파일에 자동로그인 설정이 되어있는지 확인\r\n\r\n        if(getAutoLogin){\r\n            String user_id = sharedData.getUser_id(); //사용자 id값을 저장된 파일에서 가져온다\r\n            String user_pass = sharedData.getUser_password();//사용자 password값을 저장된 파일에서 가져온다\r\n\r\n            //name = loginInformation.getString(\"name\",\"\");\r\n            Txt_id.setText(user_id);\r\n            Txt_password.setText(user_pass);\r\n            Chk_autoLogin.setChecked(true);\r\n            Btn_login.setClickable(false);\r\n\r\n            login(user_id,user_pass);//로그인 시도\r\n\r\n            /*Intent intent = new Intent(getApplicationContext(), MainActivity.class);\r\n            intent.putExtra(\"name\", name);\r\n            startActivity(intent);\r\n            finish();*/\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 이전에 자동로그인 or 아이디 저장 체크박스를 클릭했던 경우\r\n     * (나중에 일부 코드는 서버로 합칠쳐햠)\r\n     * 임시 테스트코드\r\n     */\r\n    private void checkAutoAndStore(){\r\n\r\n        //입력된 아이디 비밀번호 가져오기\r\n        user_id =  Txt_id.getText().toString(); //TextView 필드에 입력한 아이디 값을 가져온다\r\n        user_pass =  Txt_password.getText().toString(); //TextView필드에 입력한 비밀번호 값을 가져온다.\r\n        if (bool_store_login) //자동 로그인을 체크 하고 로그인 버튼을 누를시\r\n            sharedData.setUserAuto(this,user_id,user_pass,bool_store_login);\r\n\r\n\r\n        if(bool_store_id) //아이디저장 기능이 활성화 된경우\r\n            sharedData.setUserId(this, user_id, bool_store_id); //아이디 저장 기능을 사용하고 사용자 id값을 저장\r\n\r\n\r\n    }\r\n\r\n    private void show(String msg){\r\n        \r\n        Toast.makeText(this,msg,Toast.LENGTH_SHORT).show();\r\n    }\r\n    private void allocteSharedData(){\r\n        if(sharedData == null)\r\n            sharedData = new SharedData(this);\r\n    }\r\n    //사용자가 editText를 클릭한 시점에서 배경부븐을 선택하면 키보드를 자동으로 내려가지도록 설정\r\n    @Override\r\n    public boolean dispatchTouchEvent(MotionEvent ev) {\r\n        View focusView = getCurrentFocus();\r\n        if (focusView != null) {\r\n            Rect rect = new Rect();\r\n            focusView.getGlobalVisibleRect(rect);\r\n            int x = (int) ev.getX(), y = (int) ev.getY();\r\n            if (!rect.contains(x, y)) {\r\n                InputMethodManager imm = (InputMethodManager) getSystemService(INPUT_METHOD_SERVICE);\r\n                if (imm != null)\r\n                    imm.hideSoftInputFromWindow(focusView.getWindowToken(), 0);\r\n                focusView.clearFocus();\r\n            }\r\n        }\r\n        return super.dispatchTouchEvent(ev);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/smrpv2/ui/login/LoginActivity.java	(revision fc287cd9585c142a0458390b558bca6c72bbcf6a)
+++ app/src/main/java/com/example/smrpv2/ui/login/LoginActivity.java	(date 1605698813196)
@@ -21,6 +21,7 @@
 import com.example.smrpv2.R;
 import com.example.smrpv2.model.user_model.LoginUser;
 import com.example.smrpv2.model.UserDto;
+import com.example.smrpv2.model.user_model.UserInform;
 import com.example.smrpv2.retrofit.RetrofitHelper;
 import com.example.smrpv2.ui.common.SharedData;
 import com.example.smrpv2.ui.findid.FindIdActivity;
@@ -115,23 +116,20 @@
 
         LoginUser loginUser = new LoginUser(id,passwd);
 
-        Log.d("TAG", "login_id: "+id);
-        Log.d("TAG", "login_passwd: "+passwd);
         //로그인 시도
         Call<UserDto> call=RetrofitHelper.getRetrofitService_server().login(loginUser);
         call.enqueue(new Callback<UserDto>() {
             @Override
             public void onResponse(Call<UserDto> call, Response<UserDto> response) {
 
-                //Log.d("login",response.toString());
-                //Log.d("ddd", response.body().getUserId());
-
                 if(response.body().getUserId() != null){ //로그인 성공
 
                     checkAutoAndStore();
                     //MainActivity로 화면 이동
+                    UserInform user = new UserInform(response.body().getUserId(),response.body().getEmail(),response.body().getName(),
+                            response.body().getGender(),response.body().getBirth(),response.body().getCreatedAt());
                     Intent intent = new Intent(getApplication(), MainActivity.class);
-                    intent.putExtra("name",response.body().getName());
+                    //intent.putExtra("name",response.body().getName());
                     startActivity(intent);
                     finish();
                 }else{ //로그인 실패
Index: app/src/main/java/com/example/smrpv2/model/UserDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.smrpv2.model;\r\n\r\nimport com.google.gson.annotations.SerializedName;\r\n\r\npublic class UserDto {\r\n  \r\n\r\n    @SerializedName(\"userId\")//사용자 아이디\r\n    String userId;\r\n    @SerializedName(\"email\")//사용자 이메일\r\n    String email;\r\n    @SerializedName(\"name\")//사용자 이름\r\n    String name;\r\n    @SerializedName(\"gender\")//사용자 성별\r\n    String gender;\r\n    @SerializedName(\"birth\")//사용자 생일\r\n    String birth;\r\n    @SerializedName(\"createdAt\")//계정 생성 날짜\r\n    String createdAt;\r\n    /*@SerializedName(\"regMedicineList\")\r\n    <L>\r\n    @SerializedName(\"medicineAlarms\")\r\n    String email;*/\r\n\r\n\r\n\r\n\r\n    public String getUserId(){\r\n        return userId;\r\n    }\r\n    public String getEmail() {\r\n        return email;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public String getGender() {\r\n        return gender;\r\n    }\r\n\r\n    public String getBirth() {\r\n        return birth;\r\n    }\r\n\r\n    public String getCreatedAt() {\r\n        return createdAt;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/smrpv2/model/UserDto.java	(revision fc287cd9585c142a0458390b558bca6c72bbcf6a)
+++ app/src/main/java/com/example/smrpv2/model/UserDto.java	(date 1605687841005)
@@ -1,10 +1,13 @@
 package com.example.smrpv2.model;
 
+import com.google.gson.annotations.Expose;
 import com.google.gson.annotations.SerializedName;
 
 public class UserDto {
-  
+
 
+
+
     @SerializedName("userId")//사용자 아이디
     String userId;
     @SerializedName("email")//사용자 이메일
@@ -17,6 +20,7 @@
     String birth;
     @SerializedName("createdAt")//계정 생성 날짜
     String createdAt;
+
     /*@SerializedName("regMedicineList")
     <L>
     @SerializedName("medicineAlarms")
@@ -25,6 +29,8 @@
 
 
 
+
+
     public String getUserId(){
         return userId;
     }
@@ -47,4 +53,8 @@
     public String getCreatedAt() {
         return createdAt;
     }
+
+   /* public UserDto getInstance(){
+        return userDto;
+    }*/
 }
Index: app/src/main/java/com/example/smrpv2/ui/inquiry/InquiryFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.smrpv2.ui.inquiry;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.smrpv2.R;\r\nimport com.example.smrpv2.model.InquiryDto;\r\nimport com.example.smrpv2.model.Message;\r\nimport com.example.smrpv2.retrofit.RetrofitHelper;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\n/**\r\n * InquiryFragment : 문의하기 기능을 한다. 사용자가 입력한 글을 서버에게 전송한다.\r\n */\r\n\r\npublic class InquiryFragment extends Fragment {\r\n\r\n    private Button btn_send;\r\n    private TextView content;\r\n    private SharedPreferences login_inform;\r\n    private String userid, message;\r\n    private AlertDialog.Builder diaglog;\r\n\r\n    public View onCreateView(@NonNull LayoutInflater inflater,\r\n                             ViewGroup container, Bundle savedInstanceState) {\r\n\r\n        View root = inflater.inflate(R.layout.fragment_inquiry, container, false);\r\n\r\n        //초기화..\r\n        btn_send = root.findViewById(R.id.sendbutton); //전송하기 버튼\r\n        diaglog = new AlertDialog.Builder(getContext());\r\n        diaglog.setCancelable(false);\r\n        content = root.findViewById(R.id.content); //사용자가 입력한 내용\r\n        login_inform = getActivity().getSharedPreferences(\"setting\", 0);\r\n        userid = login_inform.getString(\"id\", \"q\");\r\n\r\n        btn_send.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                message = String.valueOf(content.getText());\r\n                if (message.equals(\"\")) { //메시지 입력없이 전송하기 버튼을 누를경우\r\n                    Toast.makeText(getActivity().getApplicationContext(), \"내용을 입력하세요.\", Toast.LENGTH_SHORT).show();\r\n                } else {\r\n                    InquiryDto send_message = new InquiryDto(message, userid);\r\n                    Call<Message> call = RetrofitHelper.getRetrofitService_server().addInquiry(send_message);\r\n                    call.enqueue(new Callback<Message>() {\r\n                        @Override\r\n                        public void onResponse(Call<Message> call, Response<Message> response) {\r\n                            if(response.body().getResultCode().equals(\"OK\")){\r\n                                Toast.makeText(getActivity().getApplicationContext(),\"전송 완료\",Toast.LENGTH_SHORT).show();\r\n                            }\r\n                        }\r\n\r\n                        @Override\r\n                        public void onFailure(Call<Message> call, Throwable t) {\r\n                            Log.d(\"inquiry\",t.toString());\r\n                        }\r\n                    });\r\n\r\n                    /**\r\n                     *\r\n                     * 서버\r\n                     *\r\n                     *\r\n                     */\r\n                }\r\n            }\r\n        });\r\n\r\n        return root;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/smrpv2/ui/inquiry/InquiryFragment.java	(revision fc287cd9585c142a0458390b558bca6c72bbcf6a)
+++ app/src/main/java/com/example/smrpv2/ui/inquiry/InquiryFragment.java	(date 1605699195256)
@@ -17,6 +17,7 @@
 import com.example.smrpv2.R;
 import com.example.smrpv2.model.InquiryDto;
 import com.example.smrpv2.model.Message;
+import com.example.smrpv2.model.user_model.UserInform;
 import com.example.smrpv2.retrofit.RetrofitHelper;
 
 import retrofit2.Call;
@@ -46,7 +47,7 @@
         diaglog.setCancelable(false);
         content = root.findViewById(R.id.content); //사용자가 입력한 내용
         login_inform = getActivity().getSharedPreferences("setting", 0);
-        userid = login_inform.getString("id", "q");
+        userid = UserInform.getUserId();
 
         btn_send.setOnClickListener(new View.OnClickListener() {
             @Override
Index: app/src/main/java/com/example/smrpv2/ui/home/HomeFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.smrpv2.ui.home;\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Color;\r\nimport android.os.AsyncTask;\r\nimport android.os.Bundle;\r\nimport android.text.style.ForegroundColorSpan;\r\nimport android.util.DisplayMetrics;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.WindowManager;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.navigation.NavController;\r\nimport androidx.navigation.fragment.NavHostFragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.viewpager.widget.ViewPager;\r\nimport com.example.smrpv2.R;\r\nimport com.example.smrpv2.model.home_model.HomeMedItem;\r\nimport com.example.smrpv2.model.home_model.Weather_response;\r\nimport com.example.smrpv2.retrofit.RetrofitHelper;\r\nimport com.example.smrpv2.retrofit.RetrofitService_Server;\r\nimport com.example.smrpv2.ui.common.LocationValue;\r\nimport com.example.smrpv2.ui.search.SearchActivity;\r\nimport com.example.smrpv2.ui.start.AutoSlide;\r\nimport com.example.smrpv2.ui.start.ViewPagerAdapter;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.net.MalformedURLException;\r\nimport java.net.URL;\r\nimport java.net.URLConnection;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\n\r\nimport me.relex.circleindicator.CircleIndicator;\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\n\r\n/**\r\n * HomeFragment : 메인 화면\r\n * 서버가 연결이 안돼서 서버에 관한 코드는 일단 비어놓음 (나중 수정할 예정)\r\n */\r\npublic class HomeFragment extends Fragment {\r\n\r\n    private ViewPager mainViewPager;\r\n    private ViewPager smallViewPager;\r\n    private ViewPagerAdapter adapter;\r\n    private ViewPagerAdapter bannerAdapter;\r\n    private HomeRecyclerAdapter homeRecyclerAdapter;\r\n    NavHostFragment navHostFragment;\r\n    NavController navController;\r\n\r\n   // private RecyclerView recyclerView;\r\n    ImageView ic_med_search;\r\n    ImageView ic_prescription_register;\r\n    ImageView ic_envelope_register;\r\n    ImageView ic_pharmacy_search;\r\n    ImageView ic_hospital_search;\r\n    ImageView ic_register_record;\r\n    ImageView ic_dose_record;\r\n    ImageView ic_alarm_set;\r\n    private static TextView clock_textView;\r\n\r\n\r\n    AutoSlide autoSlide;\r\n    private Bitmap bitmap;\r\n    private final long DELAY_MS = 1000; // 자동 슬라이드를 위한 변수\r\n    private final long PERIOD_MS = 3000; // 자동 슬라이드를 위한 변수\r\n    private double latitude, longitude;\r\n    private int[] images= {R.drawable.home_main_banner3, R.drawable.home_main_banner1,R.drawable.home_main_banner2};\r\n    private int[] bannerImages ={R.drawable.home_small_banner1, R.drawable.home_small_banner2,R.drawable.home_small_banner3};\r\n    public boolean isRunning = true;\r\n    HashMap<String,String> sky_image;\r\n    private ArrayList<HomeMedItem> homeMedItemArrayList=new ArrayList<HomeMedItem>();\r\n    private RetrofitService_Server json;\r\n\r\n    private HomeFragment homeFragment;\r\n    private View root;\r\n    public View onCreateView(@NonNull LayoutInflater inflater,\r\n                             ViewGroup container, Bundle savedInstanceState) {\r\n        if(container.getChildCount() > 0)\r\n            container.removeViewAt(0);\r\n        root = inflater.inflate(R.layout.fragment_home, container, false);\r\n\r\n\r\n        if(navHostFragment==null) {\r\n            navHostFragment =\r\n                    (NavHostFragment) ((AppCompatActivity) getContext()).getSupportFragmentManager()\r\n                            .findFragmentById(R.id.nav_host_fragment);\r\n        }\r\n        navController = navHostFragment.getNavController();\r\n\r\n\r\n        init();\r\n\r\n        // 첫 번째 배너 사이 간격 조정\r\n        resizeBannerPadding();\r\n\r\n        // 동적으로 배너 크기 바꾸기\r\n        LinearLayout viewP = root.findViewById(R.id.viewP);\r\n        LinearLayout viewP2 = root.findViewById(R.id.vP);\r\n        resizeBannerSize(viewP, 3);\r\n        resizeBannerSize(viewP2,4);\r\n\r\n        autoSlide = new AutoSlide(smallViewPager, DELAY_MS, PERIOD_MS);\r\n        autoSlide.startSlide();\r\n\r\n        LocationValue location = new LocationValue(getActivity());\r\n      // location.startMoule();\r\n        double latitude = location.getLatitude();\r\n        double longitude = location.getLongitude();\r\n\r\n        current_time(); // 시간표시\r\n        //하단 이미지 버튼 이동\r\n        ic_med_search.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(getContext(), SearchActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        ic_prescription_register.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                //Intent intent = new Intent(getContext(), Search_prescriptionActivity.class);\r\n                //startActivity(intent);\r\n            }\r\n        });\r\n        ic_envelope_register.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                //Intent intent = new Intent(getContext(), Search_prescriptionActivity.class);\r\n                //startActivity(intent);\r\n            }\r\n        });\r\n        ic_alarm_set.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                navController.navigate(R.id.action_nav_home_to_nav_alarm);\r\n            }\r\n        });\r\n        ic_pharmacy_search.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                navController.navigate(R.id.action_nav_home_to_nav_pharmacy);\r\n            }\r\n        });\r\n        ic_hospital_search.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                navController.navigate(R.id.action_nav_home_to_nav_hospital);\r\n            }\r\n        });\r\n        ic_register_record.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                navController.navigate(R.id.action_nav_home_to_nav_medicine);\r\n            }\r\n        });\r\n        ic_dose_record.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                navController.navigate(R.id.action_nav_home_to_nav_inquiry);\r\n            }\r\n        });\r\n\r\n        return root;\r\n\r\n    }\r\n    void resizeBannerPadding(){\r\n        int dp = 40;\r\n        float d = getResources().getDisplayMetrics().density;\r\n        final int margin = (int) (dp * d);\r\n        mainViewPager.setClipToPadding(false);\r\n        mainViewPager.setPadding(margin, 0, margin, 0);\r\n        mainViewPager.setPageMargin(margin/2);\r\n    }\r\n    void resizeBannerSize(LinearLayout lay_banner, int div){\r\n        DisplayMetrics displayMetrics = new DisplayMetrics();\r\n        WindowManager windowManager = (WindowManager) getContext().getApplicationContext().getSystemService(Context.WINDOW_SERVICE);\r\n        windowManager.getDefaultDisplay().getMetrics(displayMetrics);\r\n        ViewGroup.LayoutParams lay = (ViewGroup.LayoutParams) lay_banner.getLayoutParams();\r\n        lay.height = displayMetrics.heightPixels/div-5 ;\r\n        lay_banner.setLayoutParams(lay);\r\n    }\r\n\r\n\r\n\r\n    void current_time(){//현재 시간을 표시하는 메소드\r\n\r\n        new Thread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                while(isRunning){\r\n                    try {\r\n                        Thread.sleep(1000);\r\n                    } catch (InterruptedException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                    long now = System.currentTimeMillis();\r\n                    Date date = new Date(now);\r\n                    @SuppressLint(\"SimpleDateFormat\")\r\n                    SimpleDateFormat format = new SimpleDateFormat(\"YYYY년 MM월 dd일\\r\\n HH시 mm분\");\r\n                    final String formatDate = format.format(date);\r\n                    getActivity().runOnUiThread(new Runnable() {\r\n                        public void run() {\r\n                            clock_textView.setText(formatDate);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }).start();\r\n    }\r\n\r\n    private class Url_Connection extends AsyncTask<String,Void,String>{\r\n        @Override\r\n        protected String doInBackground(String... str_url) {\r\n            try {\r\n                URL url = new URL(str_url[0]);\r\n                URLConnection urlConnection = url.openConnection();\r\n                urlConnection.setDoInput(true);\r\n                urlConnection.connect();\r\n\r\n                InputStream is = urlConnection.getInputStream();\r\n                bitmap = BitmapFactory.decodeStream(is);\r\n\r\n            } catch (MalformedURLException e) {\r\n                e.printStackTrace();\r\n            }catch (IOException e1){\r\n                e1.printStackTrace();\r\n            }\r\n            return null;\r\n        }\r\n        protected void onPostExecute(String result){\r\n            //weather_imageview.setImageBitmap(bitmap);\r\n\r\n        }\r\n    }\r\n\r\n    public HomeFragment getInstance(){\r\n        return homeFragment;\r\n    }\r\n\r\n    public void init(){\r\n        /* 초기화 작업.... */\r\n        //서버 통신 영역\r\n        json = RetrofitHelper.getWeather().create(RetrofitService_Server.class);\r\n        //Clock영역\r\n        clock_textView = root.findViewById(R.id.colockTextview);\r\n\r\n        // 각 종 viewPager(배너), adapter, 초기화\r\n        mainViewPager =  root.findViewById(R.id.banner);\r\n        smallViewPager =  root.findViewById(R.id.banner2);\r\n        adapter = new ViewPagerAdapter(getActivity(),images,1);\r\n        bannerAdapter =  new ViewPagerAdapter(getActivity(),bannerImages);\r\n        CircleIndicator indicator = root.findViewById(R.id.indicator_home); // 인디케이터\r\n        CircleIndicator indicator2 = root.findViewById(R.id.indicator_home2); // 인디케이터\r\n\r\n\r\n        // 하단 이미지 버튼\r\n        ic_med_search = root.findViewById(R.id.ic_med_search);\r\n        ic_prescription_register = root.findViewById(R.id.ic_prescription_register);\r\n        ic_envelope_register = root.findViewById(R.id.ic_envelope_register);\r\n        ic_pharmacy_search = root.findViewById(R.id.ic_pharmacy_search);\r\n        ic_hospital_search = root.findViewById(R.id.ic_hospital_search);\r\n        ic_register_record = root.findViewById(R.id.ic_register_record);\r\n        ic_dose_record = root.findViewById(R.id.ic_dose_record);\r\n        ic_alarm_set = root.findViewById(R.id.ic_alarm_set);\r\n\r\n        homeFragment = this;\r\n\r\n        /* view 설정 */\r\n\r\n        mainViewPager.setAdapter(adapter);\r\n        smallViewPager.setAdapter(bannerAdapter);\r\n        mainViewPager.setCurrentItem(1);\r\n        smallViewPager.setCurrentItem(0);\r\n        indicator.setViewPager(mainViewPager);\r\n        indicator2.setViewPager(smallViewPager);\r\n    }\r\n    @Override\r\n    public void onDestroy() {\r\n        try {\r\n            Thread.sleep(500); //시간 스레드 동작 false로 설정후 적용하기 위한 0.5초 스레드 대기 지연\r\n            isRunning = false;\r\n\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        super.onDestroy();\r\n    }\r\n\r\n    @Override\r\n    public void onPause() {\r\n        super.onPause();\r\n        isRunning = false;\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/smrpv2/ui/home/HomeFragment.java	(revision fc287cd9585c142a0458390b558bca6c72bbcf6a)
+++ app/src/main/java/com/example/smrpv2/ui/home/HomeFragment.java	(date 1605698813191)
@@ -9,6 +9,7 @@
 import android.os.Bundle;
 import android.text.style.ForegroundColorSpan;
 import android.util.DisplayMetrics;
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -25,8 +26,10 @@
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.viewpager.widget.ViewPager;
 import com.example.smrpv2.R;
+import com.example.smrpv2.model.UserDto;
 import com.example.smrpv2.model.home_model.HomeMedItem;
 import com.example.smrpv2.model.home_model.Weather_response;
+import com.example.smrpv2.model.user_model.UserInform;
 import com.example.smrpv2.retrofit.RetrofitHelper;
 import com.example.smrpv2.retrofit.RetrofitService_Server;
 import com.example.smrpv2.ui.common.LocationValue;
@@ -211,7 +214,7 @@
                     long now = System.currentTimeMillis();
                     Date date = new Date(now);
                     @SuppressLint("SimpleDateFormat")
-                    SimpleDateFormat format = new SimpleDateFormat("YYYY년 MM월 dd일\r\n HH시 mm분");
+                    SimpleDateFormat format = new SimpleDateFormat("YYYY년 MM월 dd일\n\r HH시 mm분");
                     final String formatDate = format.format(date);
                     getActivity().runOnUiThread(new Runnable() {
                         public void run() {
Index: app/src/main/java/com/example/smrpv2/ui/main/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.smrpv2.ui.main;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.app.Dialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.os.AsyncTask;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.fragment.app.FragmentTransaction;\r\nimport androidx.navigation.NavController;\r\nimport androidx.navigation.Navigation;\r\nimport androidx.navigation.ui.AppBarConfiguration;\r\nimport androidx.navigation.ui.NavigationUI;\r\nimport com.example.smrpv2.R;\r\nimport com.example.smrpv2.model.user_model.User;\r\nimport com.example.smrpv2.ui.common.SharedData;\r\nimport com.example.smrpv2.ui.home.HomeFragment;\r\nimport com.example.smrpv2.ui.login.LoginActivity;\r\nimport com.google.android.material.navigation.NavigationView;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n\r\n    private AppBarConfiguration mAppBarConfiguration;\r\n    private DrawerLayout drawer;\r\n    String name;\r\n    Toolbar toolbar;\r\n    private final long FINISH_INTERVAL_TIME = 2000;\r\n    private long backPressedTime = 0;\r\n    private Dialog enddialog;\r\n    private TextView headr_textView;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        toolbar= findViewById(R.id.appbar);\r\n        toolbar.setTitle(R.string.app_bar_title);\r\n        setSupportActionBar(toolbar);\r\n        SharedData sharedData = new SharedData(this);\r\n        boolean auto_state = sharedData.isAuto_login();\r\n        if(auto_state)\r\n            Toast.makeText(getApplicationContext(),\"자동로그인이 되었습니다.\",Toast.LENGTH_LONG).show();\r\n\r\n\r\n        name = getIntent().getStringExtra(\"name\");\r\n        Log.d(\"TAG\", \"namenamename: \"+name);\r\n\r\n        drawer = findViewById(R.id.drawer_layout);\r\n\r\n        NavigationView navigationView = findViewById(R.id.nav_view); //navigationView을 사용하기 위한 객체 선언\r\n        navigationView.setItemIconTintList(null);\r\n        View header = navigationView.getHeaderView(0);\r\n\r\n        headr_textView = header.findViewById(R.id.tv_header);//\r\n        headr_textView.setText(name);\r\n        mAppBarConfiguration = new AppBarConfiguration.Builder(\r\n                R.id.nav_home, R.id.nav_alarm, R.id.nav_hospital,\r\n                R.id.nav_inquiry, R.id.nav_logout,R.id.nav_medicine,R.id.nav_pharmacy,R.id.nav_report_notice)\r\n                .setDrawerLayout(drawer)\r\n                .build();\r\n        NavController navController = Navigation.findNavController(this, R.id.nav_host_fragment);\r\n        NavigationUI.setupActionBarWithNavController(this, navController, mAppBarConfiguration);\r\n        NavigationUI.setupWithNavController(navigationView, navController);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed(){\r\n        long tempTime = System.currentTimeMillis();\r\n        long intervalTime = tempTime - backPressedTime;\r\n\r\n\r\n        if (drawer.isDrawerOpen(GravityCompat.START)) {\r\n            drawer.closeDrawer(GravityCompat.START);\r\n        }else if (0 <= intervalTime && FINISH_INTERVAL_TIME >= intervalTime) {\r\n            super.onBackPressed();\r\n            super.onBackPressed();\r\n        }\r\n        else {\r\n            backPressedTime = tempTime;\r\n            Toast.makeText(getApplicationContext(), \"한번 더 뒤로가기 버튼을 누르시면 종료됩니다.\", Toast.LENGTH_SHORT).show();\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n    @Override\r\n    public boolean onSupportNavigateUp() {\r\n        NavController navController = Navigation.findNavController(this, R.id.nav_host_fragment);\r\n        return NavigationUI.navigateUp(navController, mAppBarConfiguration)\r\n                || super.onSupportNavigateUp();\r\n    }\r\n\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        getMenuInflater().inflate(R.menu.appbar_action, menu) ;\r\n\r\n        return true ;\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\r\n\r\n        switch (item.getItemId()){\r\n            case R.id.logout_btn:\r\n                logout_dialog();\r\n                break;\r\n        }\r\n\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n    public void logout_dialog(){\r\n        final AlertDialog.Builder alertdialog = new AlertDialog.Builder(this);\r\n\r\n        alertdialog.setCancelable(false);//외부영역 터치시 dismiss되는것을 방지\r\n        final SharedData sharedData = new SharedData(this);\r\n        alertdialog.setMessage(\"현재 계정을 종료하시겠습니까?\");\r\n\r\n\r\n\r\n        alertdialog.setPositiveButton(\"네\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n\r\n                sharedData.reset(); //로그아웃시 사용자의 자동로그인을 해제하기위해 reset 메소드 실행\r\n                HomeFragment homeFragment = new HomeFragment().getInstance();\r\n                if(homeFragment != null) //홈프래그먼트에 runOnUiThread를 멈추기 위해서 해당 if문 사용\r\n                    homeFragment.isRunning = false;\r\n                new MainActivity.Dialog().execute();\r\n\r\n               // User user = new User(user_id,\"\",user_pass,\"\",\"\",\"\"); //서버에서 USER 클래스를 받기에 불필요한 매개변수가 들어가도 이해할것\r\n                /**\r\n                 * 서버\r\n                 * 알람에 관한것\r\n                 */\r\n\r\n            }\r\n        });\r\n\r\n        alertdialog.setNegativeButton(\"취소\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                dialog.cancel();\r\n            }\r\n        });\r\n\r\n        AlertDialog alert = alertdialog.create();\r\n        alert.show();\r\n    }\r\n    private class Dialog extends AsyncTask<Void,Void,Void> {\r\n        ProgressDialog progressDialog = new ProgressDialog(MainActivity.this);\r\n        @Override\r\n        protected void onPreExecute() {\r\n            super.onPreExecute();\r\n            progressDialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);\r\n            progressDialog.setMessage(\"로그아웃 중입니다.\");\r\n            progressDialog.show();\r\n\r\n        }\r\n        @Override\r\n        protected Void doInBackground(Void... voids) {\r\n            try {\r\n                Thread.sleep(2500); // 2초 지속\r\n\r\n            } catch (InterruptedException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            progressDialog.dismiss();\r\n            return null;\r\n        }\r\n        @Override\r\n        protected void onPostExecute(Void result) {\r\n            try {\r\n                Thread.sleep(1000);\r\n            } catch (InterruptedException e) {\r\n                e.printStackTrace();\r\n            }\r\n            Intent intent = new Intent(MainActivity.this, LoginActivity.class); //로그인페이지로 이동\r\n            startActivity(intent);\r\n            finish();\r\n            super.onPostExecute(result);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n\r\n        super.onDestroy();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/smrpv2/ui/main/MainActivity.java	(revision fc287cd9585c142a0458390b558bca6c72bbcf6a)
+++ app/src/main/java/com/example/smrpv2/ui/main/MainActivity.java	(date 1605698656489)
@@ -26,6 +26,7 @@
 import androidx.navigation.ui.NavigationUI;
 import com.example.smrpv2.R;
 import com.example.smrpv2.model.user_model.User;
+import com.example.smrpv2.model.user_model.UserInform;
 import com.example.smrpv2.ui.common.SharedData;
 import com.example.smrpv2.ui.home.HomeFragment;
 import com.example.smrpv2.ui.login.LoginActivity;
@@ -56,9 +57,8 @@
             Toast.makeText(getApplicationContext(),"자동로그인이 되었습니다.",Toast.LENGTH_LONG).show();
 
 
-        name = getIntent().getStringExtra("name");
-        Log.d("TAG", "namenamename: "+name);
-
+        //name = getIntent().getStringExtra("name");
+        name = UserInform.getName();
         drawer = findViewById(R.id.drawer_layout);
 
         NavigationView navigationView = findViewById(R.id.nav_view); //navigationView을 사용하기 위한 객체 선언
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CMakeSettings\">\r\n    <configurations>\r\n      <configuration PROFILE_NAME=\"Debug\" CONFIG_NAME=\"Debug\" />\r\n    </configurations>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_7\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision fc287cd9585c142a0458390b558bca6c72bbcf6a)
+++ .idea/misc.xml	(date 1605684061585)
@@ -5,7 +5,7 @@
       <configuration PROFILE_NAME="Debug" CONFIG_NAME="Debug" />
     </configurations>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: app/src/main/java/com/example/smrpv2/ui/splash/SplashActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.smrpv2.ui.splash;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageInfo;\r\nimport android.content.pm.PackageManager;\r\nimport android.content.pm.Signature;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Base64;\r\nimport android.util.Log;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.smrpv2.R;\r\nimport com.example.smrpv2.model.user_model.LoginUser;\r\nimport com.example.smrpv2.model.UserDto;\r\nimport com.example.smrpv2.retrofit.RetrofitHelper;\r\nimport com.example.smrpv2.ui.common.SharedData;\r\nimport com.example.smrpv2.ui.main.MainActivity;\r\nimport com.example.smrpv2.ui.start.StartActivity;\r\n\r\nimport java.security.MessageDigest;\r\nimport java.security.NoSuchAlgorithmException;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\n/*\r\n * 스플래쉬 화면\r\n * */\r\npublic class SplashActivity extends AppCompatActivity {\r\n    private Handler handler = new Handler();\r\n    SharedData sharedData;\r\n    Intent intent;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_splash);\r\n\r\n        sharedData = new SharedData(this);\r\n        final boolean auto_login = sharedData.isAuto_login();\r\n        getHashKey();\r\n        handler.postDelayed(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                if(auto_login){\r\n                    String id = sharedData.getUser_id();\r\n                    String passwd = sharedData.getUser_password();\r\n                    LoginUser loginUser = new LoginUser(id,passwd);\r\n\r\n                    Log.d(\"TAG\", \"login_id: \"+id);\r\n                    Log.d(\"TAG\", \"login_passwd: \"+passwd);\r\n                    //로그인 시도\r\n                    Call<UserDto> call= RetrofitHelper.getRetrofitService_server().login(loginUser);\r\n                    call.enqueue(new Callback<UserDto>() {\r\n                        @Override\r\n                        public void onResponse(Call<UserDto> call, Response<UserDto> response) {\r\n\r\n                            Log.d(\"login\",response.toString());\r\n                            Log.d(\"ddd\", response.body().getUserId());\r\n\r\n                            if(!response.body().getUserId().equals(\"\")){ //로그인 성공\r\n                                //MainActivity로 화면 이동\r\n                                Intent intent = new Intent(getApplication(), MainActivity.class);\r\n                                intent.putExtra(\"name\",response.body().getName());\r\n                                startActivity(intent);\r\n                                finish();\r\n                            }else{ //로그인 실패\r\n                                show(\"자동로그인 실패하였습니다.\");\r\n                                intent = new Intent(SplashActivity.this, StartActivity.class);\r\n                                startActivity(intent);\r\n                                finish();\r\n                            }\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onFailure(Call<UserDto> call, Throwable t) {\r\n\r\n                        }\r\n                    });\r\n                }else{\r\n                    intent = new Intent(getApplicationContext(), StartActivity.class);\r\n                    startActivity(intent);\r\n                    finish();//SplashActivity.this.\r\n                }\r\n\r\n            }\r\n        },2000);\r\n\r\n    }\r\n    private void show(String s){\r\n        Toast.makeText(this,s,Toast.LENGTH_SHORT).show();\r\n    }\r\n    @Override\r\n    public void onBackPressed(){ //뒤로가기 기능 제거\r\n\r\n    }\r\n    private void getHashKey(){\r\n        PackageInfo packageInfo = null;\r\n        try {\r\n            packageInfo = getPackageManager().getPackageInfo(getPackageName(), PackageManager.GET_SIGNATURES);\r\n        } catch (PackageManager.NameNotFoundException e) {\r\n            e.printStackTrace();\r\n        }\r\n        if (packageInfo == null)\r\n            Log.e(\"KeyHash\", \"KeyHash:null\");\r\n\r\n        for (Signature signature : packageInfo.signatures) {\r\n            try {\r\n                MessageDigest md = MessageDigest.getInstance(\"SHA\");\r\n                md.update(signature.toByteArray());\r\n                Log.d(\"KeyHash\", Base64.encodeToString(md.digest(), Base64.DEFAULT));\r\n            } catch (NoSuchAlgorithmException e) {\r\n                Log.e(\"KeyHash\", \"Unable to get MessageDigest. signature=\" + signature, e);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/smrpv2/ui/splash/SplashActivity.java	(revision fc287cd9585c142a0458390b558bca6c72bbcf6a)
+++ app/src/main/java/com/example/smrpv2/ui/splash/SplashActivity.java	(date 1605698813201)
@@ -16,6 +16,7 @@
 import com.example.smrpv2.R;
 import com.example.smrpv2.model.user_model.LoginUser;
 import com.example.smrpv2.model.UserDto;
+import com.example.smrpv2.model.user_model.UserInform;
 import com.example.smrpv2.retrofit.RetrofitHelper;
 import com.example.smrpv2.ui.common.SharedData;
 import com.example.smrpv2.ui.main.MainActivity;
@@ -42,55 +43,49 @@
 
         sharedData = new SharedData(this);
         final boolean auto_login = sharedData.isAuto_login();
-        getHashKey();
-        handler.postDelayed(new Runnable() {
-            @Override
-            public void run() {
-                if(auto_login){
-                    String id = sharedData.getUser_id();
-                    String passwd = sharedData.getUser_password();
-                    LoginUser loginUser = new LoginUser(id,passwd);
+
+        //getHashKey();// 각 클라이언트의 디바이스 해시키를 알야하기에 이 메소드를 구현
+
+        Log.d("TAG", "auto_login: "+auto_login);
+        if(auto_login){
+            String id = sharedData.getUser_id();
+            String passwd = sharedData.getUser_password();
+            LoginUser loginUser = new LoginUser(id,passwd);
 
-                    Log.d("TAG", "login_id: "+id);
-                    Log.d("TAG", "login_passwd: "+passwd);
-                    //로그인 시도
-                    Call<UserDto> call= RetrofitHelper.getRetrofitService_server().login(loginUser);
-                    call.enqueue(new Callback<UserDto>() {
-                        @Override
-                        public void onResponse(Call<UserDto> call, Response<UserDto> response) {
+            //로그인 시도
+            Call<UserDto> call= RetrofitHelper.getRetrofitService_server().login(loginUser);
+            call.enqueue(new Callback<UserDto>() {
+                @Override
+                public void onResponse(Call<UserDto> call, Response<UserDto> response) {
 
-                            Log.d("login",response.toString());
-                            Log.d("ddd", response.body().getUserId());
-
-                            if(!response.body().getUserId().equals("")){ //로그인 성공
-                                //MainActivity로 화면 이동
-                                Intent intent = new Intent(getApplication(), MainActivity.class);
-                                intent.putExtra("name",response.body().getName());
-                                startActivity(intent);
-                                finish();
-                            }else{ //로그인 실패
-                                show("자동로그인 실패하였습니다.");
-                                intent = new Intent(SplashActivity.this, StartActivity.class);
-                                startActivity(intent);
-                                finish();
-                            }
-
-                        }
-
-                        @Override
-                        public void onFailure(Call<UserDto> call, Throwable t) {
+                    if(!response.body().getUserId().equals("")){ //로그인 성공
+                        //MainActivity로 화면 이동
+
+                        UserInform user = new UserInform(response.body().getUserId(),response.body().getEmail(),response.body().getName(),
+                                response.body().getGender(),response.body().getBirth(),response.body().getCreatedAt());
+                        Intent intent = new Intent(getApplication(), MainActivity.class);
+                        //intent.putExtra("name",response.body().getName());
+                        startActivity(intent);
+                        finish();
+                    }else{ //로그인 실패
+                        show("자동로그인 실패하였습니다.");
+                        intent = new Intent(SplashActivity.this, StartActivity.class);
+                        startActivity(intent);
+                        finish();
+                    }
+                }
+                @Override
+                public void onFailure(Call<UserDto> call, Throwable t) {
+                    Log.d("TAG", "failfail: ");
 
-                        }
-                    });
-                }else{
-                    intent = new Intent(getApplicationContext(), StartActivity.class);
-                    startActivity(intent);
-                    finish();//SplashActivity.this.
-                }
+                }
+            });
+        }else{
+            intent = new Intent(getApplicationContext(), StartActivity.class);
+            startActivity(intent);
+            finish();//SplashActivity.this.
+        }
 
-            }
-        },2000);
-
     }
     private void show(String s){
         Toast.makeText(this,s,Toast.LENGTH_SHORT).show();
