Index: app/src/main/java/com/example/smrpv2/ui/medicine/searchMed/Search_prescriptionActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.smrpv2.ui.medicine.searchMed;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Intent;\r\n\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Matrix;\r\nimport android.media.ExifInterface;\r\nimport android.net.Uri;\r\nimport android.os.AsyncTask;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.content.FileProvider;\r\nimport androidx.recyclerview.widget.DividerItemDecoration;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport com.example.smrpv2.R;\r\nimport com.example.smrpv2.model.common.KaKaoResult;\r\nimport com.example.smrpv2.model.common.KakaoDto;\r\nimport com.example.smrpv2.model.Message;\r\nimport com.example.smrpv2.model.RegmedicineAsk;\r\nimport com.example.smrpv2.model.medicine_model.Prescriptionitem;\r\nimport com.example.smrpv2.model.prescription_model.RegMedicineList;\r\nimport com.example.smrpv2.model.prescription_model.User_Select;\r\nimport com.example.smrpv2.model.searchMed_model.MedicineInfoRsponDTO;\r\nimport com.example.smrpv2.model.user_model.UserInform;\r\nimport com.example.smrpv2.retrofit.RetrofitHelper;\r\nimport com.example.smrpv2.retrofit.RetrofitService_Server;\r\n\r\n\r\n\r\nimport java.io.File;\r\n\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.OutputStream;\r\nimport java.io.Serializable;\r\nimport java.lang.reflect.Array;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\nimport okhttp3.MediaType;\r\nimport okhttp3.MultipartBody;\r\nimport okhttp3.RequestBody;\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\n/**\r\n *\r\n * 처방전 & 약 봉투 사진 찍고 그 결과 알려주는 Activity\r\n *\r\n */\r\npublic class Search_prescriptionActivity extends AppCompatActivity implements Serializable {\r\n    private static final int MAX_DIMENSION = 1080;//1080 //이미지 크기\r\n    private String imageFilePath,imageFileName; //저장된 사진경로 및 저장된 사진 이름\r\n    private ArrayList<Prescriptionitem> list; //구축 서버로 부터 받은 의약품 리스트\r\n    private ArrayList<String> itemseq_list;\r\n    private Button Btn_add;\r\n    private ImageView iv_back;\r\n\r\n\r\n    private File photoFile;\r\n    private Uri photoUri;\r\n    private HashMap<Integer, String> select_pill_list; //사용자 선택한 약 정보를 담는 hashmap\r\n    private PrescriptionAdapter prescriptionAdapter;\r\n    private RecyclerView recyclerView;\r\n\r\n\r\n    private boolean bool_end = false;\r\n    private ProgressDialog progressDialog;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_select_pill);\r\n\r\n        initView();\r\n\r\n        Btn_add.setOnClickListener(new View.OnClickListener() { //추가하기 버튼 누를시\r\n            @Override\r\n            public void onClick(View v) { //추가하기\r\n                if(select_pill_list.size()==0){ //선택한 약이 없을 경우\r\n                    Toast.makeText(getApplicationContext(),\"약을 선택해 주세요.\", Toast.LENGTH_SHORT).show();\r\n                }else{\r\n                    for(Map.Entry<Integer, String>elem : select_pill_list.entrySet())\r\n                        itemseq_list.add(elem.getValue());\r\n                    /**\r\n                     *\r\n                     * 서버 : 검색된 약 추가하기\r\n                     */\r\n\r\n                    RegMedicineList regMedicineList = new RegMedicineList(UserInform.getUserId(),itemseq_list);\r\n                    Log.d(\"TAG\", \"itemseq_list.size: \"+itemseq_list.size());\r\n                    Call<Message> call = RetrofitHelper.getRetrofitService_server().medicineListAdd(regMedicineList);\r\n                    call.enqueue(new Callback<Message>() {\r\n                        @Override\r\n                        public void onResponse(Call<Message> call, Response<Message> response) {\r\n                            Log.d(\"onResponse\", \"onResponse: \"+response.body().getResultCode());\r\n                            if(response.body().getResultCode().equals(\"OK\")){\r\n                                //정상적으로 반영\r\n                                Toast.makeText(getApplicationContext(), itemseq_list.size()+\"건을 등록하였습니다.\", Toast.LENGTH_SHORT).show();\r\n                                finish();\r\n                            }\r\n                        }\r\n\r\n                        @Override\r\n                        public void onFailure(Call<Message> call, Throwable t) {\r\n\r\n                        }\r\n                    });\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n        iv_back.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onBackPressed();\r\n            }\r\n        });//뒤로가기\r\n\r\n        prescriptionAdapter.setOnClickListener(new PrescriptionAdapter.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(PrescriptionAdapter.ViewHolder holder, View v, int position) { //리스트 이벤트 처리\r\n\r\n                if(select_pill_list.size()==0){//사용자가 추가한 약 리스트가 없는 경우\r\n                    select_pill_list.put(position,list.get(position).getItemSeq());\r\n\r\n                }else{\r\n                    if(select_pill_list.get(position)==null){ //선택한 약이 hashmap에 없을경우\r\n                        select_pill_list.put(position,list.get(position).getItemSeq());\r\n                    }else{\r\n                        select_pill_list.remove(position);\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        sendTakePhotoIntent();\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        if (requestCode == 672 && resultCode == RESULT_OK) {\r\n            Bitmap bitmap = BitmapFactory.decodeFile(imageFilePath);\r\n            ExifInterface exif = null;\r\n\r\n            try {\r\n                exif = new ExifInterface(imageFilePath);\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            int exifOrientation;\r\n            int exifDegree;\r\n\r\n            if (exif != null) {\r\n                exifOrientation = exif.getAttributeInt(ExifInterface.TAG_ORIENTATION, ExifInterface.ORIENTATION_NORMAL);\r\n                exifDegree = exifOrientationToDegrees(exifOrientation);\r\n            } else {\r\n                exifDegree = 0;\r\n            }\r\n            Log.d(\"exifDegree\", \"exifDegree: \"+exifDegree);\r\n            Bitmap temp_bitmap = rotate(bitmap, exifDegree);\r\n            temp_bitmap = scaleBitmapDown(temp_bitmap, MAX_DIMENSION);\r\n            callKakaoVision(temp_bitmap);\r\n        }else if(resultCode==RESULT_OK){ //팝업창 종료시\r\n            finish();\r\n        }else\r\n            onBackPressed();\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n    }\r\n\r\n    private int exifOrientationToDegrees(int exifOrientation) { //회전된 사진을 정상으로 전환하기 위한 각도를 반환\r\n        if (exifOrientation == ExifInterface.ORIENTATION_ROTATE_90) {\r\n            return 90;\r\n        } else if (exifOrientation == ExifInterface.ORIENTATION_ROTATE_180) {\r\n            return 180;\r\n        } else if (exifOrientation == ExifInterface.ORIENTATION_ROTATE_270) {\r\n            return 270;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    private Bitmap rotate(Bitmap bitmap, float degree) {\r\n        Matrix matrix = new Matrix();\r\n        matrix.postRotate(degree);\r\n        return Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, true);\r\n    }\r\n\r\n    private File createImageFile() throws IOException {\r\n        String timeStamp = new SimpleDateFormat(\"yyyyMMdd_HHmmss\").format(new Date());\r\n        imageFileName = \"TEST_\" + timeStamp + \"_\";\r\n        File storageDir = getExternalFilesDir(Environment.DIRECTORY_PICTURES);\r\n        Log.d(\"TAG\", \"createImageFile: \");\r\n        File image = File.createTempFile(\r\n                imageFileName,      /* prefix */\r\n                \".jpg\",         /* suffix */\r\n                storageDir          /* directory */\r\n        );\r\n        Log.d(\"getAbsolutePath\", \"image.getAbsolutePath(): \"+image.getAbsolutePath());\r\n        //D/getAbsolutePath: image.getAbsolutePath(): /storage/emulated/0/Android/data/com.example.smrpv2/files/Pictures/TEST_20201121_215600_4975616491941498734.jpg\r\n        imageFilePath =  image.getAbsolutePath();\r\n        return image;\r\n    }\r\n    private void sendTakePhotoIntent() {\r\n        Intent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);// 내장 카메라 켜기\r\n        if (takePictureIntent.resolveActivity(getPackageManager()) != null) {\r\n            photoFile = null;\r\n\r\n            try {\r\n                photoFile = createImageFile();\r\n                if (photoFile != null) {\r\n                    photoUri = FileProvider.getUriForFile(this, getPackageName(), photoFile);\r\n\r\n                    Log.d(\"TAG\", \"photoUri: \"+photoUri);\r\n                    takePictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, photoUri);\r\n                    startActivityForResult(takePictureIntent, 672);\r\n                }\r\n            } catch (IOException ex) {\r\n                Log.d(\"TAG\",\"이미지 파일 생성 오류\");\r\n            }\r\n        }\r\n    }\r\n\r\n    private Bitmap scaleBitmapDown(Bitmap bitmap, int maxDimension) { //카카오에서 승인한 2048 픽셀 내에 이미지 크기를 만들기위한 메소드\r\n\r\n        int originalWidth = bitmap.getWidth();\r\n        int originalHeight = bitmap.getHeight();\r\n        int resizedWidth = maxDimension;\r\n        int resizedHeight = maxDimension;\r\n        if (originalHeight > originalWidth) { // 촬영한 사진의 세로길이가 너비보다 크면\r\n            resizedHeight = maxDimension;\r\n            resizedWidth = (int) (resizedHeight * (float) originalWidth / (float) originalHeight);\r\n        } else if (originalWidth > originalHeight) {\r\n            resizedWidth = maxDimension;\r\n            resizedHeight = (int) (resizedWidth * (float) originalHeight / (float) originalWidth);\r\n        } else if (originalHeight == originalWidth) {\r\n            resizedHeight = maxDimension;\r\n            resizedWidth = maxDimension;\r\n        }\r\n        return Bitmap.createScaledBitmap(bitmap, resizedWidth, resizedHeight, false);\r\n    }\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) { //내장 카메라 접근 권한 확인\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n        if (Build.VERSION.SDK_INT >= 23) {\r\n            if(grantResults[0]== PackageManager.PERMISSION_GRANTED){\r\n\r\n            }\r\n        }\r\n    } //퍼미션 접근 권한\r\n\r\n    private void callKakaoVision(Bitmap bitmap){//카카오 ocr 통신\r\n        File file = new File(imageFilePath);\r\n        Log.d(\"TAG\", \"callKakaoVision: \"+file.getAbsolutePath());\r\n        Log.d(\"TAG\", \"imageFilePath: \"+imageFilePath);\r\n        Log.d(\"TAG\", \"imageFileName: \"+imageFileName);\r\n        String filename = imageFilePath.substring(imageFilePath.lastIndexOf('/')+1);\r\n        Log.d(\"TAG\", \"filename: \"+filename);\r\n        /*callKakaoVision: /storage/emulated/0/Android/data/com.example.smrpv2/files/Pictures/TEST_20201121_221858_1761386531960783592.jpg\r\n         imageFilePath: /storage/emulated/0/Android/data/com.example.smrpv2/files/Pictures/TEST_20201121_221858_1761386531960783592.jpg\r\n         imageFileName: TEST_20201121_221858_\r\n         filename: TEST_20201121_221858_1761386531960783592.jpg*/\r\n        OutputStream os = null;\r\n\r\n        try {\r\n            os = new FileOutputStream(file);\r\n            bitmap.compress(Bitmap.CompressFormat.JPEG,50,os);\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        } finally {\r\n            try {\r\n                os.close();\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n\r\n\r\n\r\n        RequestBody body = RequestBody.create(MediaType.parse(\"image/*\"), file);\r\n        MultipartBody.Part Part = MultipartBody.Part.createFormData(\"image\", filename, body);\r\n\r\n\r\n        Call<KakaoDto> call = RetrofitHelper.getKaKaoOcr().create(RetrofitService_Server.class).sendKakaoOcr(Part);\r\n        progressDialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);\r\n        progressDialog.setMessage(\"분석중입니다.\\n잠시만 기다려 주십시오.\");\r\n        progressDialog.show();\r\n        call.enqueue(new Callback<KakaoDto>() {\r\n            @Override\r\n            public void onResponse(Call<KakaoDto> call, Response<KakaoDto> response) {\r\n                assert response.body() != null;\r\n                String[] word_array = new String[response.body().getResult().size()];\r\n                int count = 0;\r\n                if(response.body()!=null){\r\n                    for (int i = 0; i <response.body().getResult().size() ; i++) {\r\n                        KaKaoResult kaKaoResult = response.body().getResult().get(i);\r\n                        for( int j = 0 ; j <kaKaoResult.getRecognition_words().length;j++){\r\n                            word_array[count++] = kaKaoResult.getRecognition_words()[j];\r\n                        }\r\n\r\n                    }\r\n                    SendOcrdata(word_array);\r\n                }else{ //인식된 글자가 없을경우\r\n                    Toast.makeText(getApplicationContext(),\"인식된 문자가 없습니다. 이전 페이지로 이동합니다.\",Toast.LENGTH_SHORT).show();\r\n                    onBackPressed();\r\n                    finish();\r\n                }\r\n\r\n\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<KakaoDto> call, Throwable t) {\r\n                Log.d(\"실패카카오\", t.toString());\r\n            }\r\n        });\r\n    }\r\n\r\n    private void SendOcrdata(String[] array){\r\n\r\n\r\n        Call<ArrayList<MedicineInfoRsponDTO>> call = RetrofitHelper.getRetrofitService_server().sendWords(array);\r\n        call.enqueue(new Callback<ArrayList<MedicineInfoRsponDTO>>() {\r\n            @Override\r\n            public void onResponse(Call<ArrayList<MedicineInfoRsponDTO>> call, Response<ArrayList<MedicineInfoRsponDTO>> response) {\r\n\r\n                for(int i = 0 ; i < response.body().size();i++){\r\n                    MedicineInfoRsponDTO dto = response.body().get(i);\r\n                    list.add(new Prescriptionitem(dto.getItemSeq(),dto.getItemImage(),dto.getItemName(),dto.getEntpName(),dto.getEtcOtcName()));//약 식별번호 / 약 이미지 / 약 이름 / 약 제조사 / 약 포장 /약 의약품정보(일반, 전문)\r\n                    prescriptionAdapter.notifyDataSetChanged();\r\n                }\r\n                LinearLayoutManager mlinearLayoutManager = new LinearLayoutManager(getApplicationContext());\r\n                DividerItemDecoration dividerItemDecoration = new DividerItemDecoration(recyclerView.getContext(), mlinearLayoutManager.getOrientation());//구분선을 넣기 위함\r\n                recyclerView.addItemDecoration(dividerItemDecoration);\r\n                progressDialog.dismiss();\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<ArrayList<MedicineInfoRsponDTO>> call, Throwable t) {\r\n                Toast.makeText(getApplicationContext(),\"분석 결과가 없습니다. 이전 페이지로 이동합니다.\",Toast.LENGTH_SHORT).show();\r\n                progressDialog.dismiss();\r\n            }\r\n        });\r\n    }\r\n    private class Dialog extends AsyncTask<Void, Void, Void> {\r\n        ProgressDialog progressDialog1 = new ProgressDialog(Search_prescriptionActivity.this);\r\n        @Override\r\n        protected void onPreExecute() {\r\n            progressDialog1.setProgressStyle(ProgressDialog.STYLE_SPINNER);\r\n            progressDialog1.setMessage(\"로딩중입니다..\");\r\n\r\n            progressDialog1.show();\r\n            super.onPreExecute();\r\n        }\r\n        @Override\r\n        protected Void doInBackground(Void... voids) {\r\n            while(!bool_end)\r\n                ;\r\n            bool_end = false;\r\n            return null;\r\n        }\r\n        @Override\r\n        protected void onPostExecute(Void result) {\r\n            progressDialog1.dismiss();\r\n            super.onPostExecute(result);\r\n        }\r\n        @Override\r\n        protected void onCancelled() {\r\n            super.onCancelled();\r\n        }\r\n    }\r\n\r\n\r\n    private void initView(){\r\n        Btn_add = findViewById(R.id.add_btn);\r\n        iv_back = findViewById(R.id.iv_back);\r\n        select_pill_list = new HashMap<Integer, String>();\r\n        itemseq_list = new ArrayList<String>();\r\n        list = new ArrayList<Prescriptionitem>();\r\n        prescriptionAdapter = new PrescriptionAdapter(list);\r\n        recyclerView = findViewById(R.id.recycler_list);\r\n        recyclerView.setLayoutManager(new LinearLayoutManager(getApplicationContext()));\r\n        recyclerView.setAdapter(prescriptionAdapter);\r\n        progressDialog = new ProgressDialog(this);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/smrpv2/ui/medicine/searchMed/Search_prescriptionActivity.java	(revision 1935bf194d26bd1e33263f2d1703aa8f36aa69f5)
+++ app/src/main/java/com/example/smrpv2/ui/medicine/searchMed/Search_prescriptionActivity.java	(date 1606060616567)
@@ -15,6 +15,7 @@
 import android.os.Environment;
 import android.provider.MediaStore;
 import android.util.Log;
+import android.view.ContextMenu;
 import android.view.View;
 import android.widget.Button;
 import android.widget.ImageView;
@@ -158,6 +159,7 @@
 
     }
 
+
     @Override
     protected void onActivityResult(int requestCode, int resultCode, Intent data) {
         if (requestCode == 672 && resultCode == RESULT_OK) {
